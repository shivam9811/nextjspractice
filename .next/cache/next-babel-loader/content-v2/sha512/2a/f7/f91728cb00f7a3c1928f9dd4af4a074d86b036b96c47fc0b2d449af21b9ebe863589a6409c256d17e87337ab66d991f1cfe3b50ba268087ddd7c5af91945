{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\code\\\\nextProject\\\\meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetup: props.meetupData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://sg9891841549:sg9891841549@cluster0.ruko7zo.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const result = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://sg9891841549:sg9891841549@cluster0.ruko7zo.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const result = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: result._id.toString(),\n        title: result.title,\n        address: result.address,\n        image: result.image,\n        description: result.description\n      }\n    }\n  };\n}\nexport default DetailPage;","map":{"version":3,"sources":["D:/code/nextProject/meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","DetailPage","props","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","result","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","id","title","address","image","description"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,KAAK,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAYC,MAAD,KAAa;AAC7BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADqB,KAAb,CAAX;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACgB,OAAlB,CAA0B;AAC7CZ,IAAAA,GAAG,EAAE,IAAIZ,QAAJ,CAAaoB,QAAb;AADwC,GAA1B,CAArB;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVsB,QAAAA,EAAE,EAAEf,MAAM,CAACE,GAAP,CAAWS,QAAX,EADM;AAEVK,QAAAA,KAAK,EAAEhB,MAAM,CAACgB,KAFJ;AAGVC,QAAAA,OAAO,EAAEjB,MAAM,CAACiB,OAHN;AAIVC,QAAAA,KAAK,EAAElB,MAAM,CAACkB,KAJJ;AAKVC,QAAAA,WAAW,EAAEnB,MAAM,CAACmB;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAe5B,UAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst DetailPage = (props) => {\r\n  return (\r\n    <>\r\n      <MeetupDetail meetup={props.meetupData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sg9891841549:sg9891841549@cluster0.ruko7zo.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const result = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: result.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sg9891841549:sg9891841549@cluster0.ruko7zo.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const result = await meetupsCollection.findOne({\r\n    _id: new ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: result._id.toString(),\r\n        title: result.title,\r\n        address: result.address,\r\n        image: result.image,\r\n        description: result.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailPage;\r\n"]},"metadata":{},"sourceType":"module"}